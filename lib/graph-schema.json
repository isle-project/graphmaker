{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Graph Schema",
  "description": "Describes objects that define graphs with optional attributes on nodes and/or edges. Directed and undirected graphs are supported, as well as graphs with self-loops and multiple edges between nodes.",
  "type": "object",
  "$defs": {
    "x": {
      "type": "number",
      "description": "x-coordinate (left boundary of canvas is zero, right boundary is one)"
    },
    "y": {
      "type": "number",
      "description": "y-coordinate (lower boundary of canvas is zero, upper boundary is one)"
    },
    "z": {
      "type": "number",
      "default": 0,
      "description": "z-index"
    },
    "nodeShape": {
      "enum": [
        "circle",
        "square",
        "diamond",
        "triangle",
        "ellipse",
        "rectangle"
      ],
      "default": "circle"
    },
    "nodeWidthToHeight": {
      "type": "number",
      "description": "Aspect ratio of node's width to height",
      "default": 1
    },
    "nodeSize": {
      "type": "number",
      "description": "Size of the node's shape",
      "default": 1
    },
    "label": {
      "type": "string",
      "description": "Text label"
    },
    "style": {
      "type": "string",
      "description": "Style name",
      "default": "default"
    },
    "fontSize": {
      "type": "number",
      "description": "Font size in points",
      "default": 12
    },
    "fontFamily": {
      "type": "string",
      "description": "Font family"
    },
    "fontStyle": {
      "enum": [
        "normal",
        "italic",
        "oblique"
      ],
      "description": "Font style"
    },
    "fontWeight": {
      "enum": [
        "normal",
        "bold",
        "bolder",
        "lighter",
        "100",
        "200",
        "300",
        "400",
        "500",
        "600",
        "700",
        "800",
        "900"
      ],
      "description": "Font weight"
    },
    "fontVariant": {
      "enum": [
        "normal",
        "small-caps",
        "titling-caps"
      ],
      "description": "Font variant"
    },
    "fontColor": {
      "type": "string",
      "description": "A HEX color or RGB color such as rgb(255,255,255) for the font"
    },
    "textAnchor": {
      "enum": [
        "start",
        "middle",
        "end"
      ],
      "description": "Text anchor"
    },
    "lineColor": {
      "type": "string",
      "description": "A HEX color or RGB color such as rgb(255,255,255) for the stroke"
    },
    "lineWidth": {
      "enum": [
        "very-thin",
        "thin",
        "medium",
        "thick",
        "very-thick"
      ],
      "description": "Line width"
    },
    "lineStyle": {
      "enum": [
        "solid",
        "dashed",
        "dotted"
      ],
      "description": "Line stroke style"
    },
    "arrowStyle": {
      "enum": [
        "light",
        "normal",
        "heavy",
        "double"
      ],
      "description": "Arrow style"
    },
    "fill": {
      "type": "string",
      "description": "A HEX color or RGB color such as rgb(255,255,255) to fill a shape"
    },
    "fillStyle": {
      "description": "Styling for the fill pattern of the shape",
      "oneOf": [
        {
          "enum": [
            "solid",
            "dotted"
          ]
        },
        {
          "type": "integer",
          "description": "Angle of hash lines in the fill regions (0 = horizontal)",
          "minimum": 0,
          "exclusiveMaximum": 180
        }
      ]
    },
    "offset": {
      "description": "Represents an offset from a position",
      "oneOf": [
        {
          "enum": [
            "north",
            "northeast",
            "east",
            "southeast",
            "south",
            "southwest",
            "west",
            "northwest",
            "none"
          ]
        },
        {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "number"
          }
        }
      ]
    }
  },
  "properties": {
    "directed": {
      "type": "boolean",
      "description": "`true` if it is a directed graph, `false` for undirected graphs"
    },
    "canvas": {
      "type": "object",
      "description": "canvas configuration",
      "properties": {
        "width": {
          "type": "number",
          "description": "width of the canvas in pixels",
          "default": 500
        },
        "height": {
          "type": "number",
          "description": "height of the canvas in pixels",
          "default": 500
        }
      }
    },
    "styles": {
      "type": "object",
      "description": "mapping from style names to style definition objects",
      "additionalProperties": {
        "type": "object",
        "description": "style definition objects mapping style attribute names to values",
        "properties": {
          "nodeShape": {
            "$ref": "#/$defs/nodeShape"
          },
          "nodeWidthToHeight": {
            "$ref": "#/$defs/nodeWidthToHeight"
          },
          "nodeSize": {
            "$ref": "#/$defs/nodeSize"
          },
          "lineColor": {
            "$ref": "#/$defs/lineColor"
          },
          "lineWidth": {
            "$ref": "#/$defs/lineWidth"
          },
          "lineStyle": {
            "$ref": "#/$defs/lineStyle"
          },
          "arrowStyle": {
            "$ref": "#/$defs/arrowStyle"
          },
          "fill": {
            "$ref": "#/$defs/fill"
          },
          "fontFamily": {
            "$ref": "#/$defs/fontFamily"
          },
          "fontSize": {
            "$ref": "#/$defs/fontSize"
          },
          "fontStyle": {
            "$ref": "#/$defs/fontStyle"
          },
          "fontWeight": {
            "$ref": "#/$defs/fontWeight"
          },
          "fontVariant": {
            "$ref": "#/$defs/fontVariant"
          },
          "fontColor": {
            "$ref": "#/$defs/fontColor"
          },
          "labelAnchor": {
            "$ref": "#/$defs/textAnchor"
          }
        }
      }
    },
    "nodes": {
      "type": "object",
      "description": "mapping from node names to an attribute object",
      "additionalProperties": {
        "type": "object",
        "description": "maps an attribute name to an attribute value",
        "properties": {
          "fixedPosition": {
            "type": "array",
            "description": "Coordinates of the node's position that are fixed ",
            "minItems": 0,
            "maxItems": 2,
            "default": [],
            "items": {
              "enum": [
                "x",
                "y"
              ]
            }
          },
          "shape": {
            "$ref": "#/$defs/nodeShape",
            "default": "circle"
          },
          "widthToHeight": {
            "$ref": "#/$defs/nodeWidthToHeight",
            "default": 1
          },
          "size": {
            "$ref" : "#/$defs/nodeSize",
            "default": 1
          },
          "label": {
            "$ref": "#/$defs/label"
          },
          "labelOffset": {
            "$ref": "#/$defs/offset"
          },
          "x": {
            "$ref": "#/$defs/x"
          },
          "y": {
            "$ref": "#/$defs/y"
          },
          "z": {
            "$ref": "#/$defs/z"
          },
          "style": {
            "$ref": "#/$defs/style"
          },
          "lineColor": {
            "$ref": "#/$defs/lineColor"
          },
          "fill": {
            "$ref": "#/$defs/fill"
          },
          "lineWidth": {
            "$ref": "#/$defs/lineWidth"
          },
          "lineStyle": {
            "$ref": "#/$defs/lineStyle"
          },
          "fontSize": {
            "$ref": "#/$defs/fontSize"
          },
          "fontFamily": {
            "$ref": "#/$defs/fontFamily"
          },
          "fontColor": {
            "$ref": "#/$defs/fontColor"
          },
          "fontStyle": {
            "$ref": "#/$defs/fontStyle"
          },
          "fontVariant": {
            "$ref": "#/$defs/fontVariant"
          },
          "fontWeight": {
            "$ref": "#/$defs/fontWeight"
          },
          "labelAnchor": {
            "$ref": "#/$defs/textAnchor"
          }
        },
        "additionalProperties": {}
      }
    },
    "adjacency": {
      "type": "object",
      "description": "mapping from node names to an array of objects holding the name of the node to which the edge is connected and the name of the edge",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "targetNode": {
              "type": "string",
              "description": "name of the node to which the edge is connected"
            },
            "edge": {
              "type": "string",
              "description": "name of the edge (must be present in the edges object of the graph)"
            }
          }
        }
      }
    },
    "edges": {
      "type": "object",
      "description": "mapping from edge names to an attribute object; by default, an edge from node A to node B is named AB",
      "additionalProperties": {
        "type": "object",
        "description": "maps an attribute name to an attribute value",
        "properties": {
          "label": {
            "$ref": "#/$defs/label"
          },
          "labelOffset": {
            "$ref": "#/$defs/offset"
          },
          "z": {
            "$ref": "#/$defs/z"
          },
          "style": {
            "$ref": "#/$defs/style"
          },
          "angleLeaving": {
            "type": "number",
            "description": "angle relative to the direction between the node centers; in undirected graphs, the node whose name is first lexographically is taken as the source for this purpose.",
            "default": 0
          },
          "angleEntering": {
            "type": "number",
            "description": "angle relative to the direction between the node centers; in undirected graphs, the node whose name is second lexographically is taken as the target for this purpose.",
            "default": 0
          },
          "softnessLeaving": {
            "type": "number",
            "description": "controls the curvature of an edge near the source node",
            "default": 0.5
          },
          "softnessEntering": {
            "type": "number",
            "description": "controls the curvature of an edge near the target node",
            "default": 0.5
          },
          "lineColor": {
            "$ref": "#/$defs/lineColor"
          },
          "arrowStyle": {
            "$ref": "#/$defs/arrowStyle"
          },
          "lineWidth": {
            "$ref": "#/$defs/lineWidth"
          },
          "lineStyle": {
            "$ref": "#/$defs/lineStyle"
          },
          "fontSize": {
            "$ref": "#/$defs/fontSize"
          },
          "fontFamily": {
            "$ref": "#/$defs/fontFamily"
          },
          "fontColor": {
            "$ref": "#/$defs/fontColor"
          },
          "fontStyle": {
            "$ref": "#/$defs/fontStyle"
          },
          "fontVariant": {
            "$ref": "#/$defs/fontVariant"
          },
          "fontWeight": {
            "$ref": "#/$defs/fontWeight"
          },
          "labelAnchor": {
            "$ref": "#/$defs/textAnchor"
          }
        },
        "additionalProperties": {}
      }
    },
    "attributes": {
      "type": "object",
      "description": "mapping of attribute names to types"
    },
    "definitions": {
      "type": "object",
      "description": "aliases for the constructs used in style definitions"
    },
    "decorations": {
      "type": "array",
      "description": "Array of decorations to display on top of the graph (texts and rectangles)",
      "items": {
        "type": "object",
        "required": [
          "type",
          "x",
          "y"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["text", "region"],
            "description": "The type of decoration"
          },
          "x": {
            "$ref": "#/$defs/x"
          },
          "y": {
            "$ref": "#/$defs/y"
          },
          "z": {
            "$ref": "#/$defs/z"
          },
          "style": {
            "$ref": "#/$defs/style"
          },
          "fill": {
            "$ref": "#/$defs/fill"
          },
          "lineColor": {
            "$ref": "#/$defs/lineColor"
          },
          "lineWidth": {
            "$ref": "#/$defs/lineWidth"
          },
          "lineStyle": {
            "$ref": "#/$defs/lineStyle"
          },
          "fontSize": {
            "$ref": "#/$defs/fontSize"
          },
          "fontFamily": {
            "$ref": "#/$defs/fontFamily"
          },
          "text": {
            "type": "string",
            "description": "Text overlay"
          },
          "region": {
            "type": "array",
            "description": "Width and height of a rectangle",
            "maxItems": 2,
            "minItems": 2,
            "items": {
              "type": "number"
            }
          }
        },
        "dependencies": {
          "type": {
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "enum": ["text"]
                  }
                },
                "required": ["text"]
              },
              {
                "properties": {
                  "type": {
                    "enum": ["region"]
                  }
                },
                "required": ["region"]
              }
            ]
          }
        }
      }
    }
  },
  "required": [
    "directed",
    "nodes",
    "edges",
    "adjacency"
  ],
  "additionalProperties": false
}
